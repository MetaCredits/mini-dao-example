{"version":3,"sources":["layout/Header/index.js","layout/Footer/index.js","pages/Home/index.js","web3/web3Errors.js","web3/getWeb3.js","web3/getContracts.js","web3/web3Utils.js","web3/EthersContext.js","components/InfoButton/index.js","components/InfoData/index.js","components/forms/InfoBoxWrap/index.js","components/forms/CreateProposal/index.js","components/forms/JoinForm/index.js","components/MemberList/index.js","components/ProposalList/index.js","pages/MainDapp/index.js","web3/web3NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","to","className","src","alt","Component","Footer","href","Home","Web3Error","type","params","Error","captureStackTrace","name","getWeb3","Promise","resolve","reject","window","addEventListener","a","async","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","error","getContracts","networkId","miniDAO","dappFunder","MiniDAORinkeby","address","networks","DappFunderRinkeby","MiniDAOLocal","DappFunderLocal","metaEthers","ethers","decodeLogs","logs","contractEventsInterface","result","i","cleaned","decoded","decode","data","topics","inputs","forEach","input","startsWith","x","toString","push","length","formatEther","utils","arrayify","bigNumberify","Context","React","createContext","MyWeb3Provider","gatherData","bind","loaded","refresh","web3NotFound","this","setState","gameEvent","games","Web3Provider","currentProvider","ready","network","chainId","eth","getAccounts","accounts","getNetwork","signer","getSigner","contracts","miniDAOJSON","dappFunderJSON","miniDAOContract","Contract","abi","dappFunderContract","setLoaded","logName","filters","filter","fromBlock","toBlock","getLogs","interface","events","memberList","element","logName2","filters2","filter2","logs2","decoded2","proposalList","alert","navigate","Provider","value","children","MyWeb3Consumer","Consumer","InfoButton","componentDidMount","info","hidden","onClick","InfoData","loadContract","contractLoaded","loadingMessage","owner","fname","s","v","getContractValue","memberCount","proposalCount","members","selectedAddress","memstat","isMember","getBalance","balanceBN","balance","fundBalanceBN","funds","label","OptionalLabel","InfoBoxWrap","helperText","title","CreateForm","submitTransaction","metadata","contract","submitProposal","submitMetaTransaction","metaMiniContract","raw","axios","post","metaTx","metaTxProxyContract","localMetaProxyAddr","abiEncodeMetaTransction","abiMTX","sig","signature","encodedMTX","data2","metaTxCreated","txHash","tx","hash","submitMetaTransaction2","err","amount","handleChange","handleSubmit","ms","MetaSigner","MetaContract","eq","zeroBalance","event","target","preventDefault","id","onSubmit","color","onChange","disabled","JoinForm","join","encodedMeta","defaultAbiCoder","encode","MemberList","map","m","idx","key","ProposalList","componentDidUpdate","propList","MainDapp","CreateProposal","Dapp","tokenAddress","pid","Web3NotFound","App","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a3446cc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\"\nimport \"./index.css\"\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <Link to=\"/\"><img className=\"header-img\" src=\"/networkmonitoring.svg\" alt=\"\"></img></Link>\n          <div className=\"header-buttons\">\n            <Link className=\"header-link-item\" to=\"/dapp\">Dapp</Link>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport \"./index.css\"\n\nfunction Footer() {\n  return (\n      <footer>\n          <p className=\"copyright\"><a href=\"https://rapidteam.io\">\t&copy; Rapid 2020</a></p>\n      </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./index.css\"\nclass Home extends Component {\n  render() {\n    return (\n        <div className=\"home-page-div\">\n          <h2>Welcome to the MetaCredits MiniDAO Dapp</h2>\n          <p>\n            This site is part of the demo for Rapid Team's Eth Denver Hackathon Submission. MetaCredits is a product designed to allow developers and end users with a 0 balance of any crypto currency to participate in the ethereum ecosystem. We do this by allowing etherless accounts to sign metatransactions which can take advantage of a funded smart contract to reimburse a gas relayer. For a more detailed explaination see <a href=\"https://github.com/MetaCredits/docs/blob/master/posts/hello.md\">this post</a>.\n          </p>\n          <h2>What is this?</h2>\n          <p>\n            This is an example Dapp with very minimal functionality but is demonstrating the value of MetaCredits contract funded metatransaction design. The Dapp is wired up to the rinkeby blockchain, you can join the miniDAO and submit \"proposals\" to it. If you have an ether balance, the transaction created will be a normal transaction, but if you have 0 ether, you will sign a metatransaction message which will be forwarded on to an approver service and then a relayer before it makes it to the blockchain. <a href=\"/dapp\">Try it out!</a>\n          </p>\n\n          <h2>What this is NOT</h2>\n          <p>\n            This example Dapp is not a product. It was not designed to be \"useful\" in itself, just as a demonstration tool to show the potential power and ease of user onboarding for a dapp with MetaCredits.\n          </p>\n\n          <h2>Where can I learn more?</h2>\n          <ul>\n            <li>MetaCredits Docs: <a href=\"https://github.com/MetaCredits/docs\">https://github.com/MetaCredits/docs</a></li>\n          </ul>\n        </div>\n\n    );\n  }\n}\n\nexport default Home;","class Web3Error extends Error {\n    constructor(type = \"web3Error\", ...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params)\n\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, Web3Error)\n        }\n\n        this.name = 'Web3Error'\n        // Custom debugging information\n        this.type = type\n    }\n}\n\nexport default Web3Error","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        //console.log(\"Modern Web3\")\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        console.log(\"Legacy Web3\")\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        try {\n          const provider = new Web3.providers.HttpProvider(\n            \"http://127.0.0.1:854\"\n          );\n          const web3 = new Web3(provider);\n          console.log(\"No web3 instance injected, using Local web3.\");\n          resolve(web3);\n        } catch (error) {\n          console.log(\"f\")\n        }\n\n      }\n    });\n  });\n\nexport default getWeb3;\n","\n// import MiniDAORinkeby from \"../contracts/rinkeby/ExampleCoin.json\";\n\nimport MiniDAOLocal from \"../contracts/local/MetaMiniDAO.json\";\nimport DappFunderLocal from \"../contracts/local/DappFunder.json\";\n\n\nimport MiniDAORinkeby from \"../contracts/rinkeby/MetaMiniDAO.json\";\nimport DappFunderRinkeby from \"../contracts/rinkeby/DappFunder.json\";\n\nconst getContracts = (networkId) => {\n    console.log(\"getting contracts\")\n    let miniDAO;\n    let dappFunder\n    if (networkId === 4) {\n        miniDAO = MiniDAORinkeby\n        miniDAO.address = MiniDAORinkeby.networks[4].address\n        dappFunder = DappFunderRinkeby\n        dappFunder.address = DappFunderRinkeby.networks[4].address\n    }\n    if (networkId === 5777) {\n        miniDAO = MiniDAOLocal\n        miniDAO.address = MiniDAOLocal.networks[5777].address\n        dappFunder = DappFunderLocal\n        dappFunder.address = DappFunderLocal.networks[5777].address\n    }\n\n    return { miniDAO, dappFunder }\n}\n\nexport default getContracts;\n","import {ethers} from 'meta-ethers';\n\nexport const metaEthers = ethers\n\nexport const decodeLogs = (logs, contractEventsInterface) => {\n    console.log(\"HI\", logs)\n    let result = []\n    for (let i = 0; i < logs.length; i++) {\n        const log = logs[i];\n        console.log(log)\n        let cleaned = {};\n        let decoded = contractEventsInterface.decode(\n            log.data,\n            log.topics\n        );\n        contractEventsInterface.inputs.forEach((input, i) => {\n            if (input.type.startsWith(\"uint\")) {\n                let x = decoded[input.name];\n                cleaned[input.name] = x.toString();\n            } else {\n                cleaned[input.name] = decoded[input.name];\n            }\n        });\n        log.decoded = cleaned;\n        result.push(decoded)\n    }\n    return result\n}\n\nexport const arrayify = ethers.utils.arrayify\n\nexport const isHexAddress = (address) => {\n    return /^0x[a-fA-F0-9]{40}$/.test(address)\n}\n\nexport const bigNumberify = ethers.utils.bigNumberify\nexport const formatEther = ethers.utils.formatEther\nexport const compareHex = (a,b) => {\n    return (a.toLowerCase() === b.toLowerCase())\n}","import React, { Component } from \"react\";\nimport { ethers } from 'meta-ethers';\nimport { navigate } from \"@reach/router\"\nimport Web3Error from \"./web3Errors\"\n\nimport getWeb3 from \"./getWeb3\";\nimport getContracts from \"./getContracts\";\nimport {decodeLogs} from \"./web3Utils\"\n\nconst Context = React.createContext();\n\nexport class MyWeb3Provider extends Component {\n  constructor(props) {\n    super(props);\n    this.gatherData = this.gatherData.bind(this);\n\n    this.state = {\n      loaded: false,\n      refresh: () => { },\n      web3: null,\n      web3NotFound: false\n    }\n  }\n\n  setLoaded() {\n    this.setState({\n      loaded: true\n    })\n  }\n\n  addGameToList(gameEvent) {\n    //let game = event.returned\n    this.setState({\n      games: gameEvent\n    })\n  }\n  async componentDidMount() {\n    this.gatherData()\n  }\n\n  async componentDidUpdate() {\n    //this.gatherData()\n  }\n\n  async gatherData() {\n    try {\n      // Get network provider and web3 instance\n      let web3\n      if (!this.state.web3) {\n        web3 = await getWeb3();\n      } else {\n        web3 = this.state.web3\n      }\n\n      const provider = new ethers.providers.Web3Provider(web3.currentProvider)\n      //console.log(provider)\n      try {\n        await provider.ready\n      } catch (e) {\n        throw new Web3Error(\"InvalidProviderError\", \"Provider Invalid or Non-existent\")\n      }\n      //console.log(provider.network)\n\n      // check that provider is valid AND is rinkeby network\n      console.log(\"CHAINID \" + provider.network.chainId)\n      if (provider.network.chainId !== 4 && provider.network.chainId !== 5777) {\n        throw new Web3Error(\"ChainIDError\", \"Not on a supported Network)\")\n      }\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const network = await provider.getNetwork();\n      const networkId = network.chainId;\n      const signer = provider.getSigner();\n\n      const contracts = getContracts(networkId)\n      const miniDAOJSON = contracts.miniDAO\n      const dappFunderJSON = contracts.dappFunder\n      console.log(\"!!!!\", dappFunderJSON)\n\n      let miniDAOContract = new ethers.Contract(miniDAOJSON.address, miniDAOJSON.abi, signer);\n      let dappFunderContract = new ethers.Contract(dappFunderJSON.address, dappFunderJSON.abi, signer);\n\n      this.setState({ web3, provider, signer, networkId, accounts, miniDAOContract, dappFunderContract }, this.setLoaded);\n\n      let logName = \"MemberJoined\"\n      const filters = await miniDAOContract.filters[logName]()\n\n      let filter = {\n        address: miniDAOJSON.address,\n        topics: filters.topics,\n        fromBlock: 0, //TODO?\n        toBlock: \"latest\"\n      }\n    let logs = await provider.getLogs(filter)\n    console.log(logs)\n    let decoded = decodeLogs(logs, miniDAOContract.interface.events[logName])\n\n    let memberList = []\n    for (let i = 0; i < decoded.length; i++) {\n      const element = decoded[i];\n      memberList.push(element[0])\n    }\n\n    console.log(memberList)\n    this.setState({ memberList }) //simple value\n\n\n\n    let logName2 = \"ProposalSubmitted\"\n      const filters2 = await miniDAOContract.filters[logName2](null)\n\n      let filter2 = {\n        address: miniDAOJSON.address,\n        topics: filters2.topics,\n        fromBlock: 0, //TODO?\n        toBlock: \"latest\"\n      }\n    let logs2 = await provider.getLogs(filter2)\n\n    let decoded2 = decodeLogs(logs2, miniDAOContract.interface.events[logName2])\n    console.log(decoded2)\n    let proposalList = []\n    for (let i = 0; i < decoded2.length; i++) {\n      const element = decoded2[i];\n      proposalList.push([element[0], element[1],element[2]])\n    }\n\n    console.log(proposalList)\n    this.setState({ proposalList }) //simple value\n\n    } catch (error) {\n\n      switch (error.type) {\n        case \"InvalidProviderError\":\n          alert(\"No browser web3 provider found, please install a wallet such as metamask to use this app\")\n          navigate(\"/web3NotFound\")\n          break;\n        case \"ChainIDError\":\n          alert(\"Please change your metamask network to local or rinkeby\")\n          navigate(\"/web3NotFound\")\n          break;\n        default:\n          break;\n      }\n      console.error(error);\n    }\n\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n\n}\n\nexport const MyWeb3Consumer = Context.Consumer;\n\nexport default Context","import React, { Component } from \"react\";\n\nimport \"./index.css\"\n\nclass InfoButton extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hidden: false,\n            info: \"Placehold A really long sentence, hopefully it wraps, blah blah blah blah, something else this that and the other.\"\n        };\n    }\n\n    componentDidMount = async () => {\n        if (this.props.info) {\n            this.setState({info: this.props.info})\n        } else {\n            this.setState({hidden: true})\n        }\n\n    }\n\n    render() {\n        if (this.state.hidden) {\n            return <></>\n        }\n        return (\n            <div className=\"form-info-div\" onClick={()=> {console.log(\"infobutton\")}}>\n                <span>?</span>\n                <span className=\"tooltiptext\">{this.state.info}</span>\n            </div>\n        );\n    }\n}\n\n\n\nexport default InfoButton;","import React, { Component } from \"react\";\nimport \"./index.css\"\nimport InfoButton from \"../InfoButton\";\nimport {formatEther} from \"../../web3/web3Utils\"\n\nclass InfoData extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contractLoaded: false,\n      loadingMessage: \"Loading Contract...\",\n      owner: null\n    };\n\n  }\n  setLoaded() {\n    this.setState({\n      contractLoaded: true\n    })\n  }\n\n  componentDidMount = async () => {\n    this.loadContract()\n  }\n\n  async getContractValue(fname) {\n    let v\n    try {\n      let s = await this.props.miniDAOContract[fname]()\n      v = s.toString()\n    } catch (error) {\n      v = false\n    }\n    return v\n  }\n\n\n  async loadContract() {\n    try {\n\n      let memberCount = await this.getContractValue(\"totalMembers\")\n      let proposalCount = await this.getContractValue(\"totalProposals\")\n      let owner = await this.getContractValue(\"owner\")\n      let memstat = await this.props.miniDAOContract.members(window.ethereum.selectedAddress)\n      let isMember = \"You are a member\"\n      if (!memstat) {\n        isMember = \"Not a member\"\n      }\n\n      let balanceBN = await this.props.provider.getBalance(window.ethereum.selectedAddress)\n      balanceBN = formatEther(balanceBN);\n      let balance = balanceBN.toString()\n\n      let fundBalanceBN = await this.props.provider.getBalance(this.props.dappFunder.address)\n      let funds = fundBalanceBN.toString()\n\n      this.setState({ memberCount, proposalCount, owner, isMember, balance, funds}, this.setLoaded)\n\n    } catch (err) {\n      console.log(err)\n      this.setState({ loadingMessage: err.toString() })\n\n    }\n  }\n\n  render() {\n    if (!this.state.contractLoaded) {\n      return (<div>{this.state.loadingMessage}</div>)\n    }\n    return (\n      <div className=\"token-data-div\">\n        <InfoButton info={\"Something something\"} />\n        <span className=\"token-data-title\">MiniDAO Data</span>\n        <div className=\"token-inner-data-div\" >\n\n          <label className=\"token-data-label\">Total Members:</label>\n          <span className=\"token-data-span\" >&nbsp;&nbsp;{this.state.memberCount}</span>\n          <br></br>\n          <label className=\"token-data-label\">Total Proposals:</label>\n          <span className=\"token-data-span\">&nbsp;&nbsp;{this.state.proposalCount}</span>\n          <br></br>\n          <OptionalLabel label=\"Owner\" value={this.state.owner} />\n          <br></br>\n          <label className=\"token-data-label\">Membership Status:</label>\n          <span className=\"token-data-span\">&nbsp;&nbsp;{this.state.isMember}</span>\n                    <br></br>\n          <label className=\"token-data-label\">ETH Balance:</label>\n          <span className=\"token-data-span\">&nbsp;&nbsp;{this.state.balance}</span>\n          <br></br>\n          <label className=\"token-data-label\">Meta Funds Remaining:</label>\n          <span className=\"token-data-span\">&nbsp;&nbsp;{this.state.funds} wei</span>          <br></br>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst OptionalLabel = ({ label, value }) => {\n  if (!value) {\n    return (<></>)\n  }\n  return (\n    <>\n      <label className=\"token-data-label\">{label}:</label>\n      <span className=\"token-data-span\">&nbsp;&nbsp;{value}</span>\n    </>\n  )\n};\n\n\n\nexport default InfoData;","import React from \"react\";\nimport InfoButton from \"../../InfoButton\"\nimport \"./index.css\"\n\nconst InfoBoxWrap = (props) => {\n    return (\n        <div className=\"info-box\">\n            <InfoButton info={props.helperText}/> \n            <h3>{props.title}</h3>\n            {props.children}\n        </div>\n    )\n};\n\nexport default InfoBoxWrap;","import React, { Component } from \"react\";\nimport { metaEthers } from \"../../../web3/web3Utils\";\nimport InfoBoxWrap from \"../InfoBoxWrap\"\nimport axios from \"axios\"\n\nclass CreateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            amount: null,\n            isMember: false,\n            metadata: null,\n            txHash:null\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    async componentDidMount() {\n        let isMember = await this.props.miniDAOContract.members(window.ethereum.selectedAddress)\n        this.setState({ isMember });\n\n        let ms = new metaEthers.providers.MetaSigner(this.props.provider, window.ethereum.selectedAddress)\n        let metaMiniContract = new metaEthers.MetaContract(this.props.miniDAOContract.address, this.props.miniDAOContract.interface, ms)\n\n        this.setState({ metaMiniContract });\n        let balanceBN = await this.props.provider.getBalance(window.ethereum.selectedAddress)\n        if (balanceBN.eq(0)) {\n            this.setState({ zeroBalance: true });\n\n        }\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.zeroBalance) {\n            this.submitMetaTransaction()\n        } else {\n            this.submitTransaction()\n        }\n    }\n\n    submitTransaction = async () => {\n        const { metadata } = this.state\n        try {\n            await this.props.contract.submitProposal(metadata)\n        } catch (err) {\n            console.log(err)\n            alert(err.toString())\n        }\n\n    };\n\n    submitMetaTransaction = async () => {\n        try {\n            const { metadata } = this.state\n\n            let raw = await this.state.metaMiniContract.submitProposal(metadata)\n            let lambadurl = \"https://m2r4h61qui.execute-api.us-east-1.amazonaws.com/prod/ethdenver-dapp-signer\"\n\n            let data = await axios.post(lambadurl, { metaTx: raw })\n\n            let localMetaProxyAddr =  await this.props.miniDAOContract.metaTxProxyContract()\n            let abiMTX = await this.props.dappFunder.abiEncodeMetaTransction(localMetaProxyAddr, raw)\n\n            let sig = data.data.signature\n            //Will not work if local...mock service with a hardcoded local key\n            let lambadurl2 = \"https://m2r4h61qui.execute-api.us-east-1.amazonaws.com/prod/ethdenver-relay-pool\"\n            let data2 = await axios.post(lambadurl2, { encodedMTX: abiMTX, signature: sig})\n\n            console.log(data2.data)\n            this.setState({ metaTxCreated: true, signature: sig, raw: abiMTX, txHash: data2.data.tx.hash});\n\n\n        } catch (err) {\n            console.log(err)\n            alert(err.toString())\n        }\n\n    };\n\n\n\n\n    submitMetaTransaction2 = async () => {\n        try {\n            const { metadata } = this.state\n\n            // let raw = await this.state.metaMiniContract.submitProposal(metadata)\n            // console.log(\"raw metatx\", raw)\n            // let lambadurl = \"https://m2r4h61qui.execute-api.us-east-1.amazonaws.com/prod/ethdenver-dapp-signer\"\n            // let data = await axios.post(lambadurl, { metaTx: raw })\n            // console.log(\"data from post\", data)\n\n            // //Will not work if local...mock service with a hardcoded local key\n            // // let lambadurl2 = \"https://m2r4h61qui.execute-api.us-east-1.amazonaws.com/prod/ethdenver-relay-pool\"\n            // // let data2 = await axios.post(lambadurl2, { metaTx: raw, signature: data.data.signature})\n\n            // let sig = data.data.signature\n\n            // // let localMetaProxy = await this.state.metaMiniContract.metaTxProxyContract()\n            // // let localDFAddress = this.props.dappFunder.address\n            \n            // // let pk = \"0x985cd01f352f32d8501aa7637d91fa1a30fd240d99d012b13f2b09926ac8d46d\"\n\n            // // let wallet = new metaEthers.Wallet(pk, this.props.provider)\n            // // let localDappFunderContract = new metaEthers.Contract(localDFAddress, DappFunderJSON.abi, wallet)\n\n            // // let abiMTX = await dappFunder.abiEncodeMetaTransction(localMetaProxy, raw)\n\n            // // let tx = await localDappFunderContract.executeMetaTransaction(abiMTX,sig, {gasLimit:5000000})\n            // // console.log(tx)\n            // this.setState({ metaTxCreated: true, signature: sig, raw: abiMTX });\n\n        } catch (err) {\n            console.log(err)\n            alert(err.toString())\n        }\n\n    };\n\n    render() {\n        return (\n            <InfoBoxWrap title=\"Submit Proposal\" helperText={'PROPOSAL FORM'}>\n                <form id={this.props.id} onSubmit={this.handleSubmit}>\n                    {this.state.isMember ? <></> : <p><font color=\"dark-red\">You are not a member, must join MiniDAO to submit a proposal</font></p>}\n\n                    <label>Data:</label>\n                    <br></br>\n                    <input name=\"metadata\" type=\"text\" onChange={this.handleChange} />\n                    <br></br>\n\n                    <br></br>\n                    <input type=\"submit\" value=\"Submit\" disabled={!this.state.isMember} />\n                \n                    {this.state.txHash ?\n                        <div>\n                            <label>Transaction:</label>\n                            <p><a href={\"http://rinkeby.etherscan.io/tx/\" + this.state.txHash}>https://rinkeby.etherscan.io/tx/{this.state.txHash}</a></p>\n\n                        </div> : <></>}\n                </form>\n            </InfoBoxWrap>\n        );\n    }\n}\nexport default CreateForm;","import React, { Component } from \"react\";\nimport { metaEthers } from \"../../../web3/web3Utils\";\nimport InfoBoxWrap from \"../InfoBoxWrap\"\nimport axios from \"axios\"\n\nimport \"./index.css\"\nclass JoinForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMember: false,\n            zeroBalance: false,\n            metaTxCreated: false,\n            txHash:null\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    async componentDidMount() {\n\n        let isMember = await this.props.miniDAOContract.members(window.ethereum.selectedAddress)\n        this.setState({ isMember });\n\n        let ms = new metaEthers.providers.MetaSigner(this.props.provider, window.ethereum.selectedAddress)\n        let metaMiniContract = new metaEthers.MetaContract(this.props.miniDAOContract.address, this.props.miniDAOContract.interface, ms)\n\n        this.setState({ metaMiniContract });\n\n        let balanceBN = await this.props.provider.getBalance(window.ethereum.selectedAddress)\n        if (balanceBN.eq(0)) {\n            this.setState({ zeroBalance: true });\n\n        }\n    }\n\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.zeroBalance) {\n            this.submitMetaTransaction()\n        } else {\n            this.submitTransaction()\n        }\n    }\n\n    submitTransaction = async () => {\n        try {\n            await this.props.miniDAOContract.join()\n\n\n        } catch (err) {\n            console.log(err)\n            alert(err.toString())\n        }\n\n    };\n\n    submitMetaTransaction = async () => {\n        try {\n            let raw = await this.state.metaMiniContract.join()\n            let lambadurl = \"https://m2r4h61qui.execute-api.us-east-1.amazonaws.com/prod/ethdenver-dapp-signer\"\n\n            let data = await axios.post(lambadurl, { metaTx: raw })\n\n            let localMetaProxyAddr =  await this.props.miniDAOContract.metaTxProxyContract()\n            console.log(\"localmetapro\",localMetaProxyAddr)\n            let abiMTX = await this.props.dappFunder.abiEncodeMetaTransction(localMetaProxyAddr, raw)\n            let encodedMeta = metaEthers.utils.defaultAbiCoder.encode([\"address\", \"bytes\"], [localMetaProxyAddr, raw])\n            console.log(this.props.miniDAOContract.address)\n            let sig = data.data.signature\n            //Will not work if local...mock service with a hardcoded local key\n            let lambadurl2 = \"https://m2r4h61qui.execute-api.us-east-1.amazonaws.com/prod/ethdenver-relay-pool\"\n            let data2 = await axios.post(lambadurl2, { encodedMTX: encodedMeta, signature: sig})\n\n            console.log(data2.data)\n            this.setState({ metaTxCreated: true, signature: sig, raw: abiMTX, txHash: data2.data.tx.hash});\n\n        } catch (err) {\n            console.log(err)\n            alert(err.toString())\n        }\n\n    };\n\n\n    render() {\n        return (\n            <InfoBoxWrap title=\"Join MiniDAO\" helperText={'Join FORM'}>\n                <form id={this.props.id} onSubmit={this.handleSubmit}>\n                    {this.state.isMember ? <p>>You are already a member - good job</p> : <></>}\n                    <br></br>\n\n                    <input type=\"submit\" value=\"Join!\" disabled={this.state.isMember} />\n                    {this.state.txHash ?\n                        <div>\n                            <label>Transaction:</label>\n                            <p><a href={\"http://rinkeby.etherscan.io/tx/\" + this.state.txHash}>https://rinkeby.etherscan.io/tx/{this.state.txHash}</a></p>\n\n                        </div> : <></>}\n                </form>\n            </InfoBoxWrap>\n        );\n    }\n}\nexport default JoinForm;","import React, { Component } from \"react\";\nimport \"./index.css\"\nimport InfoBoxWrap from \"../forms/InfoBoxWrap\"\n\nclass MemberList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contractLoaded: false,\n      memberList: []\n    };\n  }\n\n\n\n  componentDidMount = async () => {\n\n  }\n\n\n  render() {\n    if (!this.props.memberList) {\n      return (<div></div>)\n    }\n    return (\n      <InfoBoxWrap title=\"MiniDAO Member List\" helperText={'Member List'}>\n        <div className=\"member-list-div\">\n          <ul>\n            {this.props.memberList.map((m, idx) => (<li key={idx} >{m}</li>))}\n          </ul>\n        </div>\n      </InfoBoxWrap>)\n\n  }\n\n\n}\n\nexport default MemberList;","import React, { Component } from \"react\";\nimport \"./index.css\"\nimport InfoBoxWrap from \"../forms/InfoBoxWrap\"\n\nclass ProposalList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contractLoaded: false,\n    };\n  }\n  \n\n  componentDidMount = async () => {\n\n  }\n\n  componentDidUpdate = async () => {\n    console.log(this.props)\n  }\n\n\n  render() {\n    if (!this.props.propList) {\n        return (<div></div>)\n      }\n    return (\n        <InfoBoxWrap title=\"MiniDAO Proposal List\" helperText={'Proposal List'}>\n\n      <div className=\"prop-list-div\">\n          <ul>\n          {this.props.propList.map((m, idx) => (<li key={idx} >{m[2] + \" - \" +m[0]}</li>))}\n          </ul>\n      </div>\n      </InfoBoxWrap>)\n    \n  }\n\n\n}\n\nexport default ProposalList;","import React, { Component } from \"react\";\nimport { MyWeb3Consumer } from \"../../web3/EthersContext\"\nimport InfoData from \"../../components/InfoData\"\nimport CreateProposal from \"../../components/forms/CreateProposal\"\nimport JoinForm from \"../../components/forms/JoinForm\"\nimport MemberList from \"../../components/MemberList\"\nimport ProposalList from \"../../components/ProposalList\"\n\nimport \"./index.css\"\n\nclass MainDapp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n  setLoaded() {\n    this.setState({\n      contractLoaded: true\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <InfoData miniDAOContract={this.props.miniDAOContract} dappFunder={this.props.dappFunder} provider={this.props.provider} />\n        <div className=\"display-row\">\n          <JoinForm miniDAOContract={this.props.miniDAOContract} dappFunder={this.props.dappFunder} provider={this.props.provider} signer={this.props.signer} />\n          <CreateProposal miniDAOContract={this.props.miniDAOContract} dappFunder={this.props.dappFunder} provider={this.props.provider} signer={this.props.signer} />\n        </div>\n        <div className=\"display-row\">\n          <MemberList memberList={this.props.memberList} miniDAOContract={this.props.miniDAOContract} provider={this.props.provider} />\n          <ProposalList propList={this.props.proposalList} miniDAOContract={this.props.miniDAOContract} provider={this.props.provider} />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nconst Dapp = (props) => (\n  <MyWeb3Consumer>\n    {({ loaded, networkId, signer, provider, miniDAOContract, dappFunderContract, memberList, proposalList }) => {\n      if (!loaded) {\n        return (<div>Loading form</div>)\n      }\n      return (\n        <div>\n          <MainDapp tokenAddress={props.pid} dappFunder={dappFunderContract} miniDAOContract={miniDAOContract} networkId={networkId} signer={signer} provider={provider} memberList={memberList} proposalList={proposalList} />\n        </div>\n      )\n    }}\n  </MyWeb3Consumer>\n);\n\n\nexport default Dapp;","import React from 'react';\n\nfunction Web3NotFound() {\n    return (\n      <div>Web3 not found page</div>\n    )\n}\n\nexport default Web3NotFound;","import React from 'react';\nimport Header from './layout/Header';\nimport Footer from './layout/Footer';\n\nimport './App.css';\nimport { Router } from \"@reach/router\"\n\nimport Home from \"./pages/Home\"\nimport MainDapp from \"./pages/MainDapp\"\nimport { MyWeb3Provider } from \"./web3/EthersContext\"\nimport Web3NotFound from './web3/web3NotFoundPage';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app-class\">\n        <MyWeb3Provider>\n          <Header />\n          <div className=\"page-div\">\n            <Router>\n              <Home path=\"/\" />\n              <MainDapp path=\"/dapp\" />\n              <Web3NotFound path=\"/web3NotFound\" />\n            </Router>\n          </div>\n        </MyWeb3Provider>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}